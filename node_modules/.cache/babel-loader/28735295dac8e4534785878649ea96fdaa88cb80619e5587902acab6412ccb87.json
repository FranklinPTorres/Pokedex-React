{"ast":null,"code":"var _jsxFileName = \"/home/codeyourfuture/Desktop/Pokedex/pokedex/src/CaughtPokemon.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CaughtPokemon = props => {\n  _s();\n  const pokemones = [\"Pikachu\", \"Charmander\", \"Charizard\", \"Gengar\", \"Meow\", \"Dito\", \"Psiduck\"];\n  const [count, setCount] = React.useState([]);\n  const random = Math.floor(Math.random() * pokemones.length);\n  function catchPokemon() {\n    setCount(count.concat(pokemones[random]));\n  }\n\n  //  const random = Math.floor(Math.random() * pokemones.length);\n  //  console.log(random, pokemones[random]);\n  //   const date = new Date().toLocaleDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", \"Caught \", count.length, \" pokemon's on \", props.date, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: catchPokemon,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pokemones.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CaughtPokemon, \"2OBPfwnE5zMFrLaZxJxRcYcvkWk=\");\n_c = CaughtPokemon;\nexport default CaughtPokemon;\nvar _c;\n$RefreshReg$(_c, \"CaughtPokemon\");","map":{"version":3,"names":["React","CaughtPokemon","props","pokemones","count","setCount","useState","random","Math","floor","length","catchPokemon","concat","date","map","item","index"],"sources":["/home/codeyourfuture/Desktop/Pokedex/pokedex/src/CaughtPokemon.js"],"sourcesContent":["import React from \"react\";\n\n\nconst CaughtPokemon = (props) => {\n   const pokemones = [\n    \"Pikachu\",\n    \"Charmander\",\n    \"Charizard\",\n    \"Gengar\",\n    \"Meow\",\n    \"Dito\",\n    \"Psiduck\",]\n  const [count, setCount] = React.useState([]);\n  const random = Math.floor(Math.random() * pokemones.length);\n\n  function catchPokemon() {\n    setCount(count.concat(pokemones[random]));\n     }\n\n    //  const random = Math.floor(Math.random() * pokemones.length);\n    //  console.log(random, pokemones[random]);\n  //   const date = new Date().toLocaleDateString();\n  return (\n    <div>\n      <p>\n        {\" \"}\n        Caught {count.length} pokemon's on {props.date}{\" \"}\n      </p>\n      <button onClick={catchPokemon}>Click me</button>\n      {/* <span>{props.date}</span> */}\n      <ul>\n        {pokemones.map((item, index) => {\n          return <li key={index} >{item}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default CaughtPokemon;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAG1B,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAMC,SAAS,GAAG,CACjB,SAAS,EACT,YAAY,EACZ,WAAW,EACX,QAAQ,EACR,MAAM,EACN,MAAM,EACN,SAAS,CAAE;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,EAAE,GAAGJ,SAAS,CAACO,MAAM,CAAC;EAE3D,SAASC,YAAY,GAAG;IACtBN,QAAQ,CAACD,KAAK,CAACQ,MAAM,CAACT,SAAS,CAACI,MAAM,CAAC,CAAC,CAAC;EACxC;;EAED;EACA;EACF;EACA,oBACE;IAAA,wBACE;MAAA,WACG,GAAG,aACIH,KAAK,CAACM,MAAM,oBAAgBR,KAAK,CAACW,IAAI,EAAE,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACjD,eACJ;MAAQ,OAAO,EAAEF,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAEhD;MAAA,UACGR,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC9B,oBAAO;UAAA,UAAkBD;QAAI,GAAbC,KAAK;UAAA;UAAA;UAAA;QAAA,QAAc;MACrC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GAlCIf,aAAa;AAAA,KAAbA,aAAa;AAoCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}